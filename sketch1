// https://create.arduino.cc/editor/cosinus/d2db0870-a665-4a2a-84b6-7a58061122de/preview

/*
Dieses Programm soll über einen Taster einen Zufallsgenerator für 6 LED's auslösen, sodass diese darauffolgend die jeweilige Zahl
zwischen 1 und 6 darstellen. Eine siebte LED stellt den Status der Eingabe und des Zufallsgenerators dar.

Zum Schluss erfragt eine Schleife um herauszufinden, was gerade dargestellt oder verarbeitet wird.

Der Sketch verwendet 3582 Bytes (11%) des Programmspeicherplatzes. Das Maximum sind 32256 Bytes.
Globale Variablen verwenden 239 Bytes (11%) des dynamischen Speichers, 1809 Bytes für lokale Variablen verbleiben. Das Maximum sind 2048 Bytes.

// Variable Declaration
int time = 1000; // 3 seconds to have animations waiting, might decrease for better UI
int buttonPin = 2;
int buttonState;
long rnd;

// Serial Interval
byte Ableseintervall;
byte Ai = 9600; //ms Ableseintervall
//      = 10000;

// Data Frequency f
int Ablesefrequenz;
int /*const*/ Af = 9600; // in Baud; Vin

// LED Pin Identification
int LEDpin_0 = 9;
int LEDpin_1 = 8;
int LEDpin_2 = 7;
int LEDpin_3 = 6;
int LEDpin_4 = 5;
int LEDpin_5 = 4;
int LEDpin_6 = 3;

// Initialisation
void setup()
{
  //Serial.available();
  Serial.begin(Ai);
  pinMode(9, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(2, INPUT);
  pinMode(buttonPin, INPUT); // _PULLUP
  
  Serial.println("Test LEDs");
  digitalWrite(3, HIGH); // Mitte
  digitalWrite(4, HIGH); // Links unten
  digitalWrite(5, HIGH); // Mitte unten
  digitalWrite(6, HIGH); // Rechts unten
  digitalWrite(7, HIGH); // Rechts oben
  digitalWrite(8, HIGH); // Mitte oben
  digitalWrite(9, HIGH); // Links oben
  delay(100); 			 // Blink
  digitalWrite(9, LOW);
  digitalWrite(8, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(3, LOW);
  
  Serial.println("Zähle 1.");
  digitalWrite(9, HIGH);
  delay(time);
  digitalWrite(9, LOW);
  delay(time);
  
  Serial.println("Zähle 2.");
  digitalWrite(4, HIGH);
  digitalWrite(9, HIGH);
  delay(time);
  digitalWrite(4, LOW);
  digitalWrite(9, LOW);
  delay(time);
  
  Serial.println("Zähle 3.");
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(7, HIGH);
  delay(time);
  digitalWrite(7, LOW);
  digitalWrite(4, LOW);
  digitalWrite(3, LOW);
  delay(time);
  
  Serial.println("Zähle 4.");
  digitalWrite(6, HIGH);
  digitalWrite(7, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(9, HIGH);
  delay(time);
  digitalWrite(9, LOW);
  digitalWrite(4, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
  delay(time);
  
  Serial.println("Zähle 5.");
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(6, HIGH);
  digitalWrite(7, HIGH);
  digitalWrite(9, HIGH);
  delay(time);
  digitalWrite(9, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
  digitalWrite(4, LOW);
  digitalWrite(3, LOW);
  delay(time);
  
  Serial.println("Zähle 6.");
  digitalWrite(4, HIGH);
  digitalWrite(5, HIGH);
  digitalWrite(6, HIGH);
  digitalWrite(7, HIGH);
  digitalWrite(8, HIGH);
  digitalWrite(9, HIGH);
  delay(time);
  digitalWrite(9, LOW); 
  digitalWrite(8, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  delay(time);
  
  Serial.println("Alle LEDs.");
  digitalWrite(3, HIGH); // Mitte
  digitalWrite(4, HIGH); // Links unten
  digitalWrite(5, HIGH); // Mitte unten
  digitalWrite(6, HIGH); // Rechts unten
  digitalWrite(7, HIGH); // Rechts oben
  digitalWrite(8, HIGH); // Mitte oben
  digitalWrite(9, HIGH); // Links oben
  delay(time);
  digitalWrite(9, LOW);
  digitalWrite(8, LOW);
  digitalWrite(7, LOW);
  digitalWrite(6, LOW);
  digitalWrite(5, LOW);
  digitalWrite(4, LOW);
  digitalWrite(3, LOW);

  delay(time); // Wait for specified millisecond(s)
  
  
  randomSeed(analogRead(2));
  Serial.begin(Ai);
  Serial.println("Initialisation abgeschlossen. Zufällige Wiedergabe ...");
}

// Default mode
/* 
    The loop uses the preinitialised pins & functions and runs over them continously.
    The random function uses as MINIMUM lowerBorder 1 && as MAXIMUM upperBorder 7 to target all 7 LEDs and can be changed manually.
    Later on a prompt could ask the user to type in the necessary number of lamps & the code could be adapt flexibly.
    A switch statement is more undefined but quicker than 7 if statements to call the right number to be displayed
*/


void loop()
{
  Serial.println("Würfeln ...");
  buttonState = digitalRead(buttonPin);
  Serial.println("buttonState");
  Serial.println(buttonState);
  if (buttonState == HIGH){
    rnd = random(1, 7); 
    switch (rnd) {
    case 1:
      digitalWrite(LEDpin_6, HIGH);
      Serial.println("Zähle 1.");
      delay (time);
      break;
    case 2:
      digitalWrite(LEDpin_1, HIGH);
	  digitalWrite(LEDpin_4, HIGH);
      Serial.println("Zähle 2.");
      delay (time);
      break;
    case 3:
      digitalWrite(LEDpin_1, HIGH); 
	  digitalWrite(LEDpin_6, HIGH);
      digitalWrite(LEDpin_4, HIGH);
      Serial.println("Zähle 3.");
      delay (time);
      break;
    case 4:
      digitalWrite (LEDpin_0, HIGH); 
      digitalWrite (LEDpin_2, HIGH);
      digitalWrite (LEDpin_5, HIGH); 
	  digitalWrite (LEDpin_3, HIGH);
      Serial.println("Zähle 4.");
      delay (time);
      break;
    case 5:  
	  digitalWrite (LEDpin_0, HIGH); 
      digitalWrite (LEDpin_2, HIGH);
      digitalWrite (LEDpin_5, HIGH); 
	  digitalWrite (LEDpin_3, HIGH);
	  digitalWrite (LEDpin_6, HIGH);
      Serial.println("Zähle 5.");
      delay (time);
      break;
   case 6: 
      digitalWrite(LEDpin_0, HIGH); 
	  digitalWrite(LEDpin_2, HIGH);
      digitalWrite(LEDpin_5, HIGH);
      digitalWrite(LEDpin_3, HIGH);
      digitalWrite(LEDpin_1, HIGH);
      digitalWrite(LEDpin_4, HIGH);
      Serial.println("Zähle 6.");
      delay (time);
      break;
   }
  }
  
  // Display error message after waiting for 10 seconds and shutting off all lamps.
  delay(10000); // Wait for specified millisecond(s)
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(4, LOW);
  digitalWrite(5, LOW);
  digitalWrite(6, LOW);
  digitalWrite(7, LOW);
  digitalWrite(8, LOW);
  digitalWrite(9, LOW);
  Serial.println("Programm beendet.");
  Serial.flush();
}
